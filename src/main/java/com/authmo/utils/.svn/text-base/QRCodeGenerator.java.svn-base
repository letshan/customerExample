package com.authmo.utils;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Hashtable;

import javax.imageio.ImageIO;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

/****
 * packaged the zxing lib to generate qr code
 * @author han zhang
 *
 */
public class QRCodeGenerator {

	/**
	  * @param args
	  * @throws WriterException
	  * @throws IOException
	  */
	 public static void main(String[] args) throws WriterException, IOException {
	  String qrCodeText = "http://www.authtech.com";
	  String filePath = "/opt/test/1.png";
	  int size = 125;
	  String fileType = "png";
	  File qrFile = new File(filePath);
	  createQRImage(new FileOutputStream(qrFile), qrCodeText, size, fileType);
	  System.out.println("DONE"); 
	 }
/***
 * 
 * @param qrOut:image outputStream
 * @param qrCodeText: the url or text we want hide in the qr code
 * @param size: the size of the image
 * @param fileType: the image type, 'gif','jpeg','png', etc
 * @throws WriterException
 * @throws IOException
 */
	 public static void createQRImage(OutputStream qrOut, String qrCodeText, int size,
	   String fileType) throws WriterException, IOException {
	  // Create the ByteMatrix for the QR-Code that encodes the given String
	  Hashtable hintMap = new Hashtable();
	  hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
	  QRCodeWriter qrCodeWriter = new QRCodeWriter();
	  BitMatrix byteMatrix = qrCodeWriter.encode(qrCodeText,
	    BarcodeFormat.QR_CODE, size, size, hintMap);
	  // Make the BufferedImage that are to hold the QRCode
	  int matrixWidth = byteMatrix.getWidth();
	  BufferedImage image = new BufferedImage(matrixWidth, matrixWidth,
	    BufferedImage.TYPE_INT_RGB);
	  image.createGraphics();

	  Graphics2D graphics = (Graphics2D) image.getGraphics();
	  graphics.setColor(Color.WHITE);
	  graphics.fillRect(0, 0, matrixWidth, matrixWidth);
	  // Paint and save the image using the ByteMatrix
	  graphics.setColor(Color.BLACK);

	  for (int i = 0; i < matrixWidth; i++) {
	   for (int j = 0; j < matrixWidth; j++) {
	    if (byteMatrix.get(i, j)) {
	     graphics.fillRect(i, j, 1, 1);
	    }
	   }
	  }
	  ImageIO.write(image, fileType, qrOut);
	 }

	
}
